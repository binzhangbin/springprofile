<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd"
         updateCheck="true" monitoring="autodetect"
         dynamicConfig="true">

    <diskStore path="java.io.tmpdir/ehcache"/>
    <!--必选-->
    <!--maxEntriesLocalHeap【新版】:堆内存中最大缓存对象数
        maxElementsInMemory【旧版】：cache 中最多可以存放的元素的数量。如果放入cache中的元素超过这个数值，有两种情况：
            1、若overflowToDisk的属性值为true，会将cache中多出的元素放入磁盘文件中。
            2、若overflowToDisk的属性值为false，会根据memoryStoreEvictionPolicy的策略替换cache中原有的元素。 -->
    <!--maxEntriesLocalDisk【新版】:硬盘最大缓存个数-->
    <!--eternal:设置对象是否过期-->

    <!--其余为可选-->
    <!--overflowToDisk:如果内存中数据超过内存限制，是否要缓存到磁盘上-->
    <!--timeToIdleSeconds:设置在eternal为false的情况下的对象多久没有访问就会失效时间-->
    <!--timeToLiveSeconds:设置在eternal为false的情况下的对象的存活时间-->
    <!--diskSpoolBufferSizeMB:DiskStore使用的磁盘大小，默认值30MB。每个cache使用各自的DiskStore-->
    <!--diskExpiryThreadIntervalSeconds: 对象检测线程运行时间间隔。标识对象状态的线程多长时间运行一次。以秒为单位-->
    <!--memoryStoreEvictionPolicy:如果内存中数据超过内存限制，向磁盘缓存时的策略。默认值LRU，可选FIFO、LFU-->
    <defaultCache
            maxEntriesLocalHeap="10000"
            maxEntriesLocalDisk="10000000"
            eternal="false"
            overflowToDisk="false"
            timeToIdleSeconds="120"
            timeToLiveSeconds="120"
            diskSpoolBufferSizeMB="30"
            diskExpiryThreadIntervalSeconds="120"
            memoryStoreEvictionPolicy="LRU">
        <persistence strategy="localTempSwap"/>
    </defaultCache>

    <cache name="userCache"
           maxEntriesLocalHeap="10000"
           maxEntriesLocalDisk="1000"
           eternal="false"
           timeToIdleSeconds="180"
           timeToLiveSeconds="180"
           memoryStoreEvictionPolicy="LFU"
           transactionalMode="off">
        <persistence strategy="localTempSwap"/>
    </cache>
</ehcache>